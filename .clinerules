# Neurosift Project Overview

Neurosift is a web application focused on visualizing and analyzing neuroscience data, particularly NWB (Neurodata Without Borders) files, and providing integration with the DANDI archive. The project is built using React and TypeScript, with a plugin-based architecture for extensible data visualization.

# Core Components

The project consists of several key areas:
- NWB visualization and analysis tools in src/pages/NwbPage
- DANDI archive integration in src/pages/dandi and src/pages/DandisetPage
- Remote HDF5 file handling system in src/remote-h5-file
- Extensible plugin system for different data type visualizations

# Plugin Development Guidelines

When creating new visualization plugins:
1. Place new plugins in src/pages/NwbPage/plugins
2. Follow the simple-timeseries plugin as a template
3. Create an index.ts file for plugin registration
4. Implement the plugin interface defined in pluginInterface.ts
5. Register the plugin in plugins/registry.ts

# File Organization

- components/: Shared React components
- pages/: Main application pages and features
- css/: Global stylesheets
- pages/util/: Shared utilities and helpers
- remote-h5-file/: HDF5 file handling implementation

# Pull Requests

When asked to solve an issue on github, please use the command-line to do the following:
* Create a new local branch
* Make your changes
* Push your changes to the remote repository
* Create a pull request on github that includes that we are fixing the issue
* Switch back to the main-v2 branch

# View plugins

When creating a new view plugin, don't forget to add it to the registry in registry.ts.
Usually a plugin will contain an index.ts, a SometingPluginView.tsx, and a folder of helper components.
Take a look at the SpatialSeries plugin for an example.

Also, use the search_issues tool in the MCP rather than get_issue since there seems to be a problem with the latter.

# Misc

This file serves as a living document - feel free to update it as the project evolves and new patterns emerge.

When asked to do something, first take a look around the project by reading as many files as you feel is necessary to get the background information needed.

When asked to make a python script to explore something, make a .py file with a notebook style using "# %%" markers. Make some meaningful cells to be executed. Be sure to include a "# %%" on the first line before the imports.

